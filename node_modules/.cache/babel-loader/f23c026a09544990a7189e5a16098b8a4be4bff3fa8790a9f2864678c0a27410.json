{"ast":null,"code":"const BASE_URL = 'https://auth.nomoreparties.co';\nfunction checkResponse(res) {\n  if (res.ok) return res.json();\n  return Promise.reject(res.status);\n}\n;\nexport function register(email, password) {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => checkResponse(res));\n}\n;\n\n// export function autohorize(email, password) {\n//     return fetch(`${BASE_URL}/signin`, {\n//         method: 'POST',\n//         headers: {\n//             'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify({ email, password })\n//     })\n//         .then(res => checkResponse(res))\n//         .then((data) => {\n//             if (data.token) {\n//                 const token = data.token;\n//                 console.log(data)\n//                 console.log('токен', token);\n//                 localStorage.setItem('jwt', token);\n//                 console.log(localStorage);\n\n//                 return token;\n//             };\n//         })\n// };\n\nexport function authorize(email, password) {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(res.status);\n    }\n  });\n}\nexport function getToken(token) {\n  console.log('getToken', token);\n  return fetch(`${BASE_URL}/users/me`, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(res => checkResponse(res)).then(data => data);\n}\n;","map":{"version":3,"names":["BASE_URL","checkResponse","res","ok","json","Promise","reject","status","register","email","password","fetch","method","headers","body","JSON","stringify","then","authorize","getToken","token","console","log","data"],"sources":["/Users/andrey/dev/react-mesto-auth/src/components/Auth.js"],"sourcesContent":["const BASE_URL = 'https://auth.nomoreparties.co';\n\nfunction checkResponse(res) {\n    if (res.ok) return res.json();\n  return Promise.reject(res.status);\n};\n\nexport function register(email, password) {\n    return fetch(`${BASE_URL}/signup`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ email, password })\n    })\n        .then(res => checkResponse(res));\n};\n\n// export function autohorize(email, password) {\n//     return fetch(`${BASE_URL}/signin`, {\n//         method: 'POST',\n//         headers: {\n//             'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify({ email, password })\n//     })\n//         .then(res => checkResponse(res))\n//         .then((data) => {\n//             if (data.token) {\n//                 const token = data.token;\n//                 console.log(data)\n//                 console.log('токен', token);\n//                 localStorage.setItem('jwt', token);\n//                 console.log(localStorage);\n        \n//                 return token;\n//             };\n//         })\n// };\n\nexport function authorize(email, password) {\n    return fetch(`${BASE_URL}/signin`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ password, email })\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n        else {\n          return Promise.reject(res.status)\n        }\n      })\n  }\n\nexport function getToken(token) {\n    console.log('getToken', token);\n   return fetch(`${BASE_URL}/users/me`, {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`,\n        }\n    })\n        .then(res => checkResponse(res))\n        .then(data => data)\n};"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,+BAA+B;AAEhD,SAASC,aAAa,CAACC,GAAG,EAAE;EACxB,IAAIA,GAAG,CAACC,EAAE,EAAE,OAAOD,GAAG,CAACE,IAAI,EAAE;EAC/B,OAAOC,OAAO,CAACC,MAAM,CAACJ,GAAG,CAACK,MAAM,CAAC;AACnC;AAAC;AAED,OAAO,SAASC,QAAQ,CAACC,KAAK,EAAEC,QAAQ,EAAE;EACtC,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAQ,EAAE;IAC/BY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,KAAK;MAAEC;IAAS,CAAC;EAC5C,CAAC,CAAC,CACGO,IAAI,CAACf,GAAG,IAAID,aAAa,CAACC,GAAG,CAAC,CAAC;AACxC;AAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,OAAO,SAASgB,SAAS,CAACT,KAAK,EAAEC,QAAQ,EAAE;EACvC,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAQ,EAAE;IACjCY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEN,QAAQ;MAAED;IAAM,CAAC;EAC1C,CAAC,CAAC,CACCQ,IAAI,CAACf,GAAG,IAAI;IACX,IAAIA,GAAG,CAACC,EAAE,EAAE;MACV,OAAOD,GAAG,CAACE,IAAI,EAAE;IACnB,CAAC,MACI;MACH,OAAOC,OAAO,CAACC,MAAM,CAACJ,GAAG,CAACK,MAAM,CAAC;IACnC;EACF,CAAC,CAAC;AACN;AAEF,OAAO,SAASY,QAAQ,CAACC,KAAK,EAAE;EAC5BC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,KAAK,CAAC;EAC/B,OAAOT,KAAK,CAAE,GAAEX,QAAS,WAAU,EAAE;IAChCa,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAG,UAASO,KAAM;IACrC;EACJ,CAAC,CAAC,CACGH,IAAI,CAACf,GAAG,IAAID,aAAa,CAACC,GAAG,CAAC,CAAC,CAC/Be,IAAI,CAACM,IAAI,IAAIA,IAAI,CAAC;AAC3B;AAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}