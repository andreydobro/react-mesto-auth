{"ast":null,"code":"var _jsxFileName = \"/Users/andrey/dev/react-mesto-auth/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../index';\nimport { Header } from './Header';\nimport { Main } from './Main';\nimport { Footer } from './Footer';\nimport { PopupWithForm } from './PopupWithForm';\nimport { ImagePopup } from './ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { api } from '../utils/api';\nimport { EditProfilePopup } from './EditProfilePopup';\nimport { EditAvatarPopup } from './EditAvatarPopup';\nimport { AddPlacePopup } from './AddPlacePopup';\nimport Register from './Register';\nimport Login from './Login';\nimport ProtectedRouter from './ProtectedRouter';\nimport apiAuth from './Auth';\nimport { Route, Routes, BrowserRouter, Navigate, useNavigate } from \"react-router-dom\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isConfirmDeletePopupOpen, setIsConfirmDeletePopupOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [cards, setCards] = useState([]);\n  const [currentUser, setCurrentUser] = useState({});\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [emailName, setEmailName] = useState(null);\n  const [popupImage, setPopupImage] = useState(\"\");\n  const [popupTitle, setPopupTitle] = useState(\"\");\n  const [infoTooltip, setInfoTooltip] = useState(false);\n  const [status, setStatus] = useState(false); // Статус регистрации(авторизации), используется для Tooltip (popup уведомления)\n  const [tooltipOpen, setTooltipOpen] = useState(false); // Состояние Tooltip\n  const [email, setEmail] = useState(''); // Хранение и передача почты\n  // Переменная для хранения истории (в React 6 место useHistory используется useNavigate)\n  // const navigate = useNavigate();\n\n  useEffect(() => {\n    api.getInitialCards().then(data => {\n      setCards(data);\n    }).catch(err => {\n      console.log(`Ошибка: ${err}`);\n    });\n  }, []);\n  useEffect(() => {\n    api.getUserInfo().then(data => setCurrentUser(data)).catch(err => console.log(err));\n  }, []);\n  const closeAllPopups = () => {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setInfoTooltip(false);\n    setSelectedCard({});\n  };\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n  };\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  };\n  const handleCardClick = card => {\n    setSelectedCard(card);\n  };\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  function handleConfirmDeleteClick() {\n    setIsConfirmDeletePopupOpen(true);\n  }\n  function handlePopupCloseClick(evt) {\n    if (evt.target.classList.contains('popup_opened')) {\n      closeAllPopups();\n    }\n  }\n  function handleInfoTooltip() {\n    setInfoTooltip(true);\n  }\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    if (!isLiked) {\n      api.addLikeCard(card._id).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      }).catch(err => {\n        console.log(`Ошибка при установке лайка: ${err}`);\n      });\n    } else {\n      api.removeLikeCard(card._id).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      }).catch(err => {\n        console.log(`Ошибка при удалении лайка: ${err}`);\n      });\n    }\n  }\n  function handleUpdateUser(data) {\n    setIsLoading(true);\n    api.editUserInfo(data.name, data.about).then(formData => {\n      setCurrentUser(formData);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(\"Ошибка при редактировании профиля\", err);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  }\n  function handleUpdateAvatar(data) {\n    setIsLoading(true);\n    api.editUserAvatar(data.avatar).then(formData => {\n      setCurrentUser(formData);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(\"Ошибка при редактировании аватара\", err);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  }\n  function handleUpdatePlaces(data) {\n    setIsLoading(true);\n    api.createCard(data.name, data.link).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(\"Ошибка при добавлении новой карточки\", err);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  }\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards(state => state.filter(c => c._id !== card._id));\n    }).catch(err => {\n      console.log(`Ошибка при удалении карточки: ${err}`);\n    });\n  }\n\n  // Функция регистрации пользователя (при успехе(и нет) всплывает popup через Tooltip используя статус)\n  function handleRegister(password, email) {\n    apiAuth.userRegistration(password, email).then(() => {\n      setTooltipOpen(true);\n      setStatus(true);\n    }).catch(err => {\n      console.log(`Возникла ошибка при регистрации пользователя, ${err}`);\n      setTooltipOpen(true);\n      setStatus(false);\n    });\n  }\n  // Функция авторизации пользователя (при неудаче всплывает popup через Tooltip используя статус)\n  function handleLogin(password, email) {\n    apiAuth.userAuthorization(password, email).then(res => {\n      // Если токен валиден, авторизовываем и перебрасываем на главную\n      if (res.token) {\n        localStorage.setItem('token', res.token);\n        setEmail(email);\n        setIsLoggedIn(true);\n        // navigate.push('/');\n      }\n    }).catch(err => {\n      console.log(`Возникла ошибка при авторизации, ${err}`);\n      setTooltipOpen(true);\n      setStatus(false);\n    });\n  }\n  // Функция выхода пользователя\n  function handleLogout() {\n    localStorage.removeItem('token');\n    setIsLoggedIn(false);\n  }\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        isLoggedIn: isLoggedIn,\n        email: email,\n        isLogout: handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/\",\n          isLoggedIn: isLoggedIn,\n          component: Main,\n          onEditAvatar: handleEditAvatarClick,\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onCardClick: handleCardClick,\n          onCardDelete: handleCardDelete,\n          onCardLike: handleCardLike,\n          cards: cards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: `/sign-in`,\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            handleLogin: handleLogin,\n            isOpen: tooltipOpen,\n            onClose: closeAllPopups,\n            status: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: `/sign-up`,\n          children: /*#__PURE__*/_jsxDEV(Register, {\n            handleRegister: handleRegister,\n            isOpen: tooltipOpen,\n            onClose: closeAllPopups,\n            status: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupEditAvatar, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupEditProfile, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupAddCard, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        isOpen: isImageOpen,\n        onClose: closeAllPopups,\n        card: selectedCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        isOpen: tooltipOpen,\n        onClose: closeAllPopups,\n        status: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Cq8/k3DOUCLkn3Ql3iwG1kQIyok=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Header","Main","Footer","PopupWithForm","ImagePopup","CurrentUserContext","api","EditProfilePopup","EditAvatarPopup","AddPlacePopup","Register","Login","ProtectedRouter","apiAuth","Route","Routes","BrowserRouter","Navigate","useNavigate","InfoTooltip","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmDeletePopupOpen","setIsConfirmDeletePopupOpen","isLoading","setIsLoading","selectedCard","setSelectedCard","cards","setCards","currentUser","setCurrentUser","isLoggedIn","setIsLoggedIn","emailName","setEmailName","popupImage","setPopupImage","popupTitle","setPopupTitle","infoTooltip","setInfoTooltip","status","setStatus","tooltipOpen","setTooltipOpen","email","setEmail","getInitialCards","then","data","catch","err","console","log","getUserInfo","closeAllPopups","handleAddPlaceClick","handleEditAvatarClick","handleCardClick","card","handleEditProfileClick","handleConfirmDeleteClick","handlePopupCloseClick","evt","target","classList","contains","handleInfoTooltip","handleCardLike","isLiked","likes","some","i","_id","addLikeCard","newCard","state","map","c","removeLikeCard","handleUpdateUser","editUserInfo","name","about","formData","finally","handleUpdateAvatar","editUserAvatar","avatar","handleUpdatePlaces","createCard","link","handleCardDelete","deleteCard","filter","handleRegister","password","userRegistration","handleLogin","userAuthorization","res","token","localStorage","setItem","handleLogout","removeItem","handleAddCard","isImageOpen"],"sources":["/Users/andrey/dev/react-mesto-auth/src/components/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport '../index';\nimport { Header } from './Header';\nimport { Main } from './Main'\nimport { Footer } from './Footer'\nimport { PopupWithForm } from './PopupWithForm';\nimport { ImagePopup } from './ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { api } from '../utils/api';\nimport { EditProfilePopup } from './EditProfilePopup'\nimport { EditAvatarPopup } from './EditAvatarPopup';\nimport { AddPlacePopup } from './AddPlacePopup';\nimport Register from './Register';\nimport Login from './Login';\nimport ProtectedRouter from './ProtectedRouter';\nimport apiAuth from './Auth';\nimport { Route, Routes, BrowserRouter, Navigate, useNavigate } from \"react-router-dom\";\nimport InfoTooltip from \"./InfoTooltip\";\n\nexport const App = () => {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isConfirmDeletePopupOpen, setIsConfirmDeletePopupOpen] = useState(false)\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [cards, setCards] = useState([]);\n  const [currentUser, setCurrentUser] = useState({});\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [emailName, setEmailName] = useState(null);\n  const [popupImage, setPopupImage] = useState(\"\");\n  const [popupTitle, setPopupTitle] = useState(\"\");\n  const [infoTooltip, setInfoTooltip] = useState(false);\n  const [status, setStatus] = useState(false); // Статус регистрации(авторизации), используется для Tooltip (popup уведомления)\n  const [tooltipOpen, setTooltipOpen] = useState(false); // Состояние Tooltip\n  const [email, setEmail] = useState(''); // Хранение и передача почты\n  // Переменная для хранения истории (в React 6 место useHistory используется useNavigate)\n  // const navigate = useNavigate();\n\n  useEffect(() => {\n    api\n      .getInitialCards()\n      .then((data) => {\n        setCards(data);\n      })\n      .catch((err) => {\n        console.log(`Ошибка: ${err}`);\n      });\n  }, []);\n\n  useEffect(() => {\n    api.getUserInfo()\n      .then(data => setCurrentUser(data))\n      .catch((err) => console.log(err))\n  }, [])\n\n  const closeAllPopups = () => {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setInfoTooltip(false);\n    setSelectedCard({})\n  }\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  const handleCardClick = (card) => {\n    setSelectedCard(card)\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true)\n  }\n\n  function handleConfirmDeleteClick() {\n    setIsConfirmDeletePopupOpen(true);\n  }\n\n  function handlePopupCloseClick(evt) {\n    if (evt.target.classList.contains('popup_opened')) {\n      closeAllPopups();\n    }\n  }\n\n  function handleInfoTooltip() {\n    setInfoTooltip(true);\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    if (!isLiked) {\n      api\n        .addLikeCard(card._id)\n        .then((newCard) => {\n          setCards((state) =>\n            state.map((c) => (c._id === card._id ? newCard : c))\n          );\n        })\n        .catch((err) => {\n          console.log(`Ошибка при установке лайка: ${err}`);\n        });\n    } else {\n      api\n        .removeLikeCard(card._id)\n        .then((newCard) => {\n          setCards((state) =>\n            state.map((c) => (c._id === card._id ? newCard : c))\n          );\n        })\n        .catch((err) => {\n          console.log(`Ошибка при удалении лайка: ${err}`);\n        });\n    }\n  }\n\n  function handleUpdateUser(data) {\n    setIsLoading(true);\n    api\n      .editUserInfo(data.name, data.about)\n      .then((formData) => {\n        setCurrentUser(formData);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(\"Ошибка при редактировании профиля\", err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }\n\n  function handleUpdateAvatar(data) {\n    setIsLoading(true);\n    api\n      .editUserAvatar(data.avatar)\n      .then((formData) => {\n        setCurrentUser(formData);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(\"Ошибка при редактировании аватара\", err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }\n\n  function handleUpdatePlaces(data) {\n    setIsLoading(true);\n    api\n      .createCard(data.name, data.link)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(\"Ошибка при добавлении новой карточки\", err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }\n\n  function handleCardDelete(card) {\n    api\n      .deleteCard(card._id)\n      .then(() => {\n        setCards((state) => state.filter((c) => c._id !== card._id));\n      })\n      .catch((err) => {\n        console.log(`Ошибка при удалении карточки: ${err}`);\n      });\n  }\n\n  // Функция регистрации пользователя (при успехе(и нет) всплывает popup через Tooltip используя статус)\n  function handleRegister(password, email) {\n    apiAuth.userRegistration(password, email)\n      .then(() => { setTooltipOpen(true); setStatus(true) })\n      .catch((err) => { console.log(`Возникла ошибка при регистрации пользователя, ${err}`); setTooltipOpen(true); setStatus(false) })\n  }\n  // Функция авторизации пользователя (при неудаче всплывает popup через Tooltip используя статус)\n  function handleLogin(password, email) {\n    apiAuth.userAuthorization(password, email)\n      .then((res) => {\n        // Если токен валиден, авторизовываем и перебрасываем на главную\n        if (res.token) {\n          localStorage.setItem('token', res.token);\n          setEmail(email);\n          setIsLoggedIn(true);\n          // navigate.push('/');\n        }\n      })\n      .catch((err) => { console.log(`Возникла ошибка при авторизации, ${err}`); setTooltipOpen(true); setStatus(false) })\n  }\n  // Функция выхода пользователя\n  function handleLogout() { localStorage.removeItem('token'); setIsLoggedIn(false); }\n\n  return (\n    <CurrentUserContext.Provider value={ currentUser } >\n      <div className=\"page\">\n        <Header\n          isLoggedIn = { isLoggedIn }\n          email = { email }\n          isLogout = { handleLogout } />\n        <Routes>\n          <ProtectedRoute exact path='/'\n            isLoggedIn = { isLoggedIn }\n            component = { Main }\n            onEditAvatar = { handleEditAvatarClick }\n            onEditProfile = { handleEditProfileClick }\n            onAddPlace = { handleAddPlaceClick }\n            onCardClick = { handleCardClick }\n            onCardDelete = { handleCardDelete }\n            onCardLike = { handleCardLike }\n            cards = { cards } />\n          <Route path = { `/sign-in` }>\n            <Login\n              handleLogin = { handleLogin }\n              isOpen = { tooltipOpen }\n              onClose = { closeAllPopups }\n              status = { status } />\n          </Route>\n          <Route path = { `/sign-up` }>\n            <Register\n              handleRegister = { handleRegister }\n              isOpen = { tooltipOpen }\n              onClose = { closeAllPopups }\n              status = { status } />\n          </Route>\n        </Routes>\n        <Footer />\n        <PopupEditAvatar\n          isOpen = { isEditAvatarPopupOpen }\n          onClose = { closeAllPopups }\n          onUpdateAvatar = { handleUpdateAvatar } />\n        <PopupEditProfile\n          isOpen = { isEditProfilePopupOpen }\n          onClose = { closeAllPopups }\n          onUpdateUser = { handleUpdateUser }/>\n        <PopupAddCard\n          isOpen = { isAddPlacePopupOpen }\n          onClose = { closeAllPopups }\n          onAddPlace = { handleAddCard } />\n        <ImagePopup\n          isOpen = { isImageOpen }\n          onClose = { closeAllPopups }\n          card = { selectedCard } />\n        <InfoTooltip\n          isOpen = { tooltipOpen }\n          onClose = { closeAllPopups }\n          status = { status } />\n      </div>\n    </CurrentUserContext.Provider >\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}