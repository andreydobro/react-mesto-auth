{"ast":null,"code":"\n// export const apiAuth = 'https://auth.nomoreparties.co/';\n\n// export const register = (password, email) => {\n//   return fetch(`${apiAuth}/auth/local/register`, {\n//     method: 'POST',\n//     headers: {\n//       'Accept': 'application/json',\n//       'Content-Type': 'application/json'\n//     },\n//     body: JSON.stringify({ password, email})\n//   })\n//   .then((response) => {\n//     try {\n//       if (response.status === 200){\n//         return response.json();\n//       }\n//     } catch(e){\n//       return (e)\n//     }\n//   })\n//   .then((res) => {\n//     return res;\n//   })\n//   .catch((err) => console.log(err));\n// }; \n\n// export const authorize = (indentifier, password) => {\n//   return fetch (`${apiAuth}/auth/local`, {\n//     method: 'POST',\n//     headers: {\n//       'Accept': 'application/json',\n//       'Content-Type': 'application/json'\n//     },\n//     body: JSON.stringify({ password, indentifier})\n//   })\n//   .then((response => response.json()))\n//   .then ((data) => {\n//     if (data.user) {\n//       localStorage.setItem('jwt', data.jwt);\n//       return data;\n//     } else {\n\n//     }\n//   })\n//   .catch(err => console.log(err))\n// }\n\n// export const getContent = (token) => {\n//   return fetch (`${apiAuth}/users/me`, {\n//     method: 'GET',\n//     headers: {\n//       'Accept': 'application/json',\n//       'Content-Type': 'application/json',\n//       'Authorization': `apiAuth ${token}`,\n//     }\n//   })\n//   .then(res => res.json())\n//   .then(data => data)\n// }\n\n// class AuthApi {\n//   constructor(authUrl) {\n//     this._authUrl = authUrl;\n//   }\n//   // Метод обработки ответа сервера\n//   _processingServerResponse (res) {\n//     if (res.ok) {\n//       return res.json();\n//     } else {\n//       return Promise.reject(`код ошибки: ${res.status}`);\n//     }\n//   }\n//   // Метод верификации токена\n//   tokenVerification (token) {\n//     return fetch(`${this._authUrl}users/me`, {\n//       // По умолчанию fetch — это GET, можно не указывать\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         \"Authorization\" : `Bearer ${token}`\n//       }\n//     })\n//       .then(this._processingServerResponse)\n//   }\n//   // Метод авторизации пользователя\n//   userAuthorization (password, email) {\n//     return fetch(`${this._authUrl}signin`, {\n//       method: 'POST',\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({ password, email })\n//     })\n//       .then(this._processingServerResponse)\n//   }\n//   // Метод регистрации пользователя\n//   userRegistration (password, email) {\n//     return fetch(`${this._authUrl}signup`, {\n//       method: 'POST',\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({ password, email })\n//     })\n//       .then(this._processingServerResponse)\n//   }\n// }\n\n// // Создание экземпляра класса\n// const apiAuth = new AuthApi('https://auth.nomoreparties.co/');\n// // Экспорт экземпляра класса\n// export default apiAuth;","map":{"version":3,"names":[],"sources":["/Users/andrey/dev/react-mesto-auth/src/components/Auth.js"],"sourcesContent":["\n// export const apiAuth = 'https://auth.nomoreparties.co/';\n\n// export const register = (password, email) => {\n//   return fetch(`${apiAuth}/auth/local/register`, {\n//     method: 'POST',\n//     headers: {\n//       'Accept': 'application/json',\n//       'Content-Type': 'application/json'\n//     },\n//     body: JSON.stringify({ password, email})\n//   })\n//   .then((response) => {\n//     try {\n//       if (response.status === 200){\n//         return response.json();\n//       }\n//     } catch(e){\n//       return (e)\n//     }\n//   })\n//   .then((res) => {\n//     return res;\n//   })\n//   .catch((err) => console.log(err));\n// }; \n\n// export const authorize = (indentifier, password) => {\n//   return fetch (`${apiAuth}/auth/local`, {\n//     method: 'POST',\n//     headers: {\n//       'Accept': 'application/json',\n//       'Content-Type': 'application/json'\n//     },\n//     body: JSON.stringify({ password, indentifier})\n//   })\n//   .then((response => response.json()))\n//   .then ((data) => {\n//     if (data.user) {\n//       localStorage.setItem('jwt', data.jwt);\n//       return data;\n//     } else {\n\n//     }\n//   })\n//   .catch(err => console.log(err))\n// }\n\n// export const getContent = (token) => {\n//   return fetch (`${apiAuth}/users/me`, {\n//     method: 'GET',\n//     headers: {\n//       'Accept': 'application/json',\n//       'Content-Type': 'application/json',\n//       'Authorization': `apiAuth ${token}`,\n//     }\n//   })\n//   .then(res => res.json())\n//   .then(data => data)\n// }\n\n\n\n// class AuthApi {\n//   constructor(authUrl) {\n//     this._authUrl = authUrl;\n//   }\n//   // Метод обработки ответа сервера\n//   _processingServerResponse (res) {\n//     if (res.ok) {\n//       return res.json();\n//     } else {\n//       return Promise.reject(`код ошибки: ${res.status}`);\n//     }\n//   }\n//   // Метод верификации токена\n//   tokenVerification (token) {\n//     return fetch(`${this._authUrl}users/me`, {\n//       // По умолчанию fetch — это GET, можно не указывать\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         \"Authorization\" : `Bearer ${token}`\n//       }\n//     })\n//       .then(this._processingServerResponse)\n//   }\n//   // Метод авторизации пользователя\n//   userAuthorization (password, email) {\n//     return fetch(`${this._authUrl}signin`, {\n//       method: 'POST',\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({ password, email })\n//     })\n//       .then(this._processingServerResponse)\n//   }\n//   // Метод регистрации пользователя\n//   userRegistration (password, email) {\n//     return fetch(`${this._authUrl}signup`, {\n//       method: 'POST',\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({ password, email })\n//     })\n//       .then(this._processingServerResponse)\n//   }\n// }\n\n// // Создание экземпляра класса\n// const apiAuth = new AuthApi('https://auth.nomoreparties.co/');\n// // Экспорт экземпляра класса\n// export default apiAuth;\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}