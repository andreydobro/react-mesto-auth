{"ast":null,"code":"const BASE_URL = 'https://auth.nomoreparties.co';\nfunction checkResponse(res) {\n  if (res.ok) {\n    return res.json();\n  } else {\n    Promise.reject(`Ошибка: ${res.status}/${res.statusText}`);\n  }\n  ;\n}\n;\nexport function register(email, password) {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => checkResponse(res));\n}\n;\nexport function login(email, password) {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => checkResponse(res)).then(data => {\n    if (data.token) {\n      const token = data.token;\n      localStorage.setItem('jwt', token);\n      return token;\n    }\n    ;\n  });\n}\n;\nexport function getToken(token) {\n  return fetch(`${BASE_URL}/users/me`, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(res => checkResponse(res)).then(data => data);\n}\n;","map":{"version":3,"names":["BASE_URL","checkResponse","res","ok","json","Promise","reject","status","statusText","register","email","password","fetch","method","headers","body","JSON","stringify","then","login","data","token","localStorage","setItem","getToken"],"sources":["/Users/andrey/dev/react-mesto-auth/src/components/Auth.js"],"sourcesContent":["const BASE_URL = 'https://auth.nomoreparties.co';\n\nfunction checkResponse(res) {\n  if (res.ok) {\n    return res.json();\n  } else {\n    Promise.reject(`Ошибка: ${res.status}/${res.statusText}`);\n  };\n};\n\nexport function register(email, password) {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ email, password })\n  })\n    .then(res => checkResponse(res));\n};\n\nexport function login (email, password) {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ email, password })\n  })\n    .then(res => checkResponse(res))\n    .then((data) => {\n      if (data.token) {\n        const token = data.token;\n        localStorage.setItem('jwt', token);\n\n        return token;\n      };\n    })\n};\n\nexport function getToken(token) {\n  return fetch(`${BASE_URL}/users/me`, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  })\n    .then(res => checkResponse(res))\n    .then(data => data)\n};"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,+BAA+B;AAEhD,SAASC,aAAa,CAACC,GAAG,EAAE;EAC1B,IAAIA,GAAG,CAACC,EAAE,EAAE;IACV,OAAOD,GAAG,CAACE,IAAI,EAAE;EACnB,CAAC,MAAM;IACLC,OAAO,CAACC,MAAM,CAAE,WAAUJ,GAAG,CAACK,MAAO,IAAGL,GAAG,CAACM,UAAW,EAAC,CAAC;EAC3D;EAAC;AACH;AAAC;AAED,OAAO,SAASC,QAAQ,CAACC,KAAK,EAAEC,QAAQ,EAAE;EACxC,OAAOC,KAAK,CAAE,GAAEZ,QAAS,SAAQ,EAAE;IACjCa,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,KAAK;MAAEC;IAAS,CAAC;EAC1C,CAAC,CAAC,CACCO,IAAI,CAAChB,GAAG,IAAID,aAAa,CAACC,GAAG,CAAC,CAAC;AACpC;AAAC;AAED,OAAO,SAASiB,KAAK,CAAET,KAAK,EAAEC,QAAQ,EAAE;EACtC,OAAOC,KAAK,CAAE,GAAEZ,QAAS,SAAQ,EAAE;IACjCa,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,KAAK;MAAEC;IAAS,CAAC;EAC1C,CAAC,CAAC,CACCO,IAAI,CAAChB,GAAG,IAAID,aAAa,CAACC,GAAG,CAAC,CAAC,CAC/BgB,IAAI,CAAEE,IAAI,IAAK;IACd,IAAIA,IAAI,CAACC,KAAK,EAAE;MACd,MAAMA,KAAK,GAAGD,IAAI,CAACC,KAAK;MACxBC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEF,KAAK,CAAC;MAElC,OAAOA,KAAK;IACd;IAAC;EACH,CAAC,CAAC;AACN;AAAC;AAED,OAAO,SAASG,QAAQ,CAACH,KAAK,EAAE;EAC9B,OAAOT,KAAK,CAAE,GAAEZ,QAAS,WAAU,EAAE;IACnCc,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAG,UAASO,KAAM;IACnC;EACF,CAAC,CAAC,CACCH,IAAI,CAAChB,GAAG,IAAID,aAAa,CAACC,GAAG,CAAC,CAAC,CAC/BgB,IAAI,CAACE,IAAI,IAAIA,IAAI,CAAC;AACvB;AAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}