{"ast":null,"code":"var _jsxFileName = \"/Users/andrey/dev/react-mesto-auth/src/components/ProtectedRouter.js\";\n// import { Redirect, Route } from \"react-router-dom\";\n// import { React } from \"react\";\n\n// function ProtectedRoute({ loggedIn, children, ...props }) {\n\n//   return (\n//     <Route {...props}>\n//       {loggedIn ? children : <Redirect to=\"/sign-in\" />}\n//     </Route>\n//   );\n// }\n\n// export default ProtectedRoute;\n\nimport React from 'react';\nimport { Navigate } from \"react-router-dom\";\n\n// этот компонент принимает другой компонент в качестве пропса\n// он также может взять неограниченное число пропсов и передать их новому компоненту\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRouteElement = _ref => {\n  let {\n    element: Component,\n    ...props\n  } = _ref;\n  return props.loggedIn ? /*#__PURE__*/_jsxDEV(Component, {\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 22\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 49\n  }, this);\n};\n_c = ProtectedRouteElement;\nexport default ProtectedRouteElement;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRouteElement\");","map":{"version":3,"names":["React","Navigate","ProtectedRouteElement","element","Component","props","loggedIn"],"sources":["/Users/andrey/dev/react-mesto-auth/src/components/ProtectedRouter.js"],"sourcesContent":["// import { Redirect, Route } from \"react-router-dom\";\n// import { React } from \"react\";\n\n\n// function ProtectedRoute({ loggedIn, children, ...props }) {\n\n//   return (\n//     <Route {...props}>\n//       {loggedIn ? children : <Redirect to=\"/sign-in\" />}\n//     </Route>\n//   );\n// }\n\n// export default ProtectedRoute;\n\nimport React from 'react';\nimport { Navigate } from \"react-router-dom\";\n\n// этот компонент принимает другой компонент в качестве пропса\n// он также может взять неограниченное число пропсов и передать их новому компоненту\nconst ProtectedRouteElement = ({ element: Component, ...props  }) => {\n  return (\n    props.loggedIn ? <Component {...props} /> : <Navigate to=\"/login\" replace/>\n)}\n\nexport default ProtectedRouteElement;"],"mappings":";AAAA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;;AAE3C;AACA;AAAA;AACA,MAAMC,qBAAqB,GAAG,QAAuC;EAAA,IAAtC;IAAEC,OAAO,EAAEC,SAAS;IAAE,GAAGC;EAAO,CAAC;EAC9D,OACEA,KAAK,CAACC,QAAQ,gBAAG,QAAC,SAAS;IAAA,GAAKD;EAAK;IAAA;IAAA;IAAA;EAAA,QAAI,gBAAG,QAAC,QAAQ;IAAC,EAAE,EAAC,QAAQ;IAAC,OAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QAAE;AAC9E,CAAC;AAAA,KAHIH,qBAAqB;AAK3B,eAAeA,qBAAqB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}