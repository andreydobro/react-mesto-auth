{"ast":null,"code":"const BASE_URL = 'https://auth.nomoreparties.co';\nfunction checkResponse(res) {\n  if (res.ok) return res.json();\n  return Promise.reject(res.status);\n}\n;\nexport function register(email, password) {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => checkResponse(res));\n}\n;\nexport function autohorize(email, password) {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => checkResponse(res)).then(data => {\n    if (data.token) {\n      const token = data.token;\n      localStorage.setItem('jwt', token);\n      return token;\n    }\n    ;\n  });\n}\n;\nexport function getToken(token) {\n  return fetch(`${BASE_URL}/users/me`, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(res => checkResponse(res)).then(data => data);\n}\n;\nconsole.log(token);","map":{"version":3,"names":["BASE_URL","checkResponse","res","ok","json","Promise","reject","status","register","email","password","fetch","method","headers","body","JSON","stringify","then","autohorize","data","token","localStorage","setItem","getToken","console","log"],"sources":["/Users/andrey/dev/react-mesto-auth/src/components/Auth.js"],"sourcesContent":["const BASE_URL = 'https://auth.nomoreparties.co';\n\nfunction checkResponse(res) {\n    if (res.ok) return res.json();\n  return Promise.reject(res.status);\n};\n\nexport function register(email, password) {\n    return fetch(`${BASE_URL}/signup`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ email, password })\n    })\n        .then(res => checkResponse(res));\n};\n\nexport function autohorize(email, password) {\n    return fetch(`${BASE_URL}/signin`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ email, password })\n    })\n        .then(res => checkResponse(res))\n        .then((data) => {\n            if (data.token) {\n                const token = data.token;\n                localStorage.setItem('jwt', token);\n\n                return token;\n            };\n        })\n};\n\nexport function getToken(token) {\n    return fetch(`${BASE_URL}/users/me`, {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n        }\n    })\n        .then(res => checkResponse(res))\n        .then(data => data)\n};\n\nconsole.log(token);"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,+BAA+B;AAEhD,SAASC,aAAa,CAACC,GAAG,EAAE;EACxB,IAAIA,GAAG,CAACC,EAAE,EAAE,OAAOD,GAAG,CAACE,IAAI,EAAE;EAC/B,OAAOC,OAAO,CAACC,MAAM,CAACJ,GAAG,CAACK,MAAM,CAAC;AACnC;AAAC;AAED,OAAO,SAASC,QAAQ,CAACC,KAAK,EAAEC,QAAQ,EAAE;EACtC,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAQ,EAAE;IAC/BY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,KAAK;MAAEC;IAAS,CAAC;EAC5C,CAAC,CAAC,CACGO,IAAI,CAACf,GAAG,IAAID,aAAa,CAACC,GAAG,CAAC,CAAC;AACxC;AAAC;AAED,OAAO,SAASgB,UAAU,CAACT,KAAK,EAAEC,QAAQ,EAAE;EACxC,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAQ,EAAE;IAC/BY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,KAAK;MAAEC;IAAS,CAAC;EAC5C,CAAC,CAAC,CACGO,IAAI,CAACf,GAAG,IAAID,aAAa,CAACC,GAAG,CAAC,CAAC,CAC/Be,IAAI,CAAEE,IAAI,IAAK;IACZ,IAAIA,IAAI,CAACC,KAAK,EAAE;MACZ,MAAMA,KAAK,GAAGD,IAAI,CAACC,KAAK;MACxBC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEF,KAAK,CAAC;MAElC,OAAOA,KAAK;IAChB;IAAC;EACL,CAAC,CAAC;AACV;AAAC;AAED,OAAO,SAASG,QAAQ,CAACH,KAAK,EAAE;EAC5B,OAAOT,KAAK,CAAE,GAAEX,QAAS,WAAU,EAAE;IACjCa,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAG,UAASO,KAAM;IACrC;EACJ,CAAC,CAAC,CACGH,IAAI,CAACf,GAAG,IAAID,aAAa,CAACC,GAAG,CAAC,CAAC,CAC/Be,IAAI,CAACE,IAAI,IAAIA,IAAI,CAAC;AAC3B;AAAC;AAEDK,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}