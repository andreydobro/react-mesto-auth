{"ast":null,"code":"function checkResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(res.status);\n}\nexport const BASE_URL = \"https://auth.nomoreparties.co\";\nexport function registerUser(email, password) {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(checkResponse);\n}\nexport function loginUser(email, password) {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(checkResponse);\n}\nexport function getToken(jwt) {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${jwt}`\n    }\n  }).then(checkResponse);\n}","map":{"version":3,"names":["checkResponse","res","ok","json","Promise","reject","status","BASE_URL","registerUser","email","password","fetch","method","headers","body","JSON","stringify","then","loginUser","getToken","jwt","Authorization"],"sources":["/Users/andrey/dev/react-mesto-auth/src/components/Auth.js"],"sourcesContent":["function checkResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(res.status);\n}\n\nexport const BASE_URL = \"https://auth.nomoreparties.co\";\n\nexport function registerUser(email, password) {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ email, password }),\n  }).then(checkResponse);\n}\n\nexport function loginUser(email, password) {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ email, password }),\n  }).then(checkResponse);\n}\n\nexport function getToken(jwt) {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${jwt}`,\n    },\n  }).then(checkResponse);\n}"],"mappings":"AAAA,SAASA,aAAa,CAACC,GAAG,EAAE;EAC1B,IAAIA,GAAG,CAACC,EAAE,EAAE;IACV,OAAOD,GAAG,CAACE,IAAI,EAAE;EACnB;EACA,OAAOC,OAAO,CAACC,MAAM,CAACJ,GAAG,CAACK,MAAM,CAAC;AACnC;AAEA,OAAO,MAAMC,QAAQ,GAAG,+BAA+B;AAEvD,OAAO,SAASC,YAAY,CAACC,KAAK,EAAEC,QAAQ,EAAE;EAC5C,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IACjCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,KAAK;MAAEC;IAAS,CAAC;EAC1C,CAAC,CAAC,CAACO,IAAI,CAACjB,aAAa,CAAC;AACxB;AAEA,OAAO,SAASkB,SAAS,CAACT,KAAK,EAAEC,QAAQ,EAAE;EACzC,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IACjCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,KAAK;MAAEC;IAAS,CAAC;EAC1C,CAAC,CAAC,CAACO,IAAI,CAACjB,aAAa,CAAC;AACxB;AAEA,OAAO,SAASmB,QAAQ,CAACC,GAAG,EAAE;EAC5B,OAAOT,KAAK,CAAE,GAAEJ,QAAS,WAAU,EAAE;IACnCK,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCQ,aAAa,EAAG,UAASD,GAAI;IAC/B;EACF,CAAC,CAAC,CAACH,IAAI,CAACjB,aAAa,CAAC;AACxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}